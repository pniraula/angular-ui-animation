angular.module("angularUiAnimation",["angularUiAnimation.fly","angularUiAnimation.util","angularUiAnimation.flip"]),angular.module("angularUiAnimation.flip.flipIn",[]).directive("flipIn",["$timeout","util",function(i,n){return{restrict:"EA",scope:!1,link:function(a,t,l){var r=n.attr(t,"duration")||300,u=n.attr(t,"direction")||"vertical",o=n.attr(t,"when")||"init";o=o.split(","),console.log(o);var e=function(){n.css(t,"animationDuration",r/1e3+"s"),t.addClass("au-flip-in"),t.addClass(u),i(function(){t.removeClass("au-flip-in"),t.removeClass(u)},r)};for(var s in o)"init"===o[s]?e():t.bind(o[s],e)}}}]),angular.module("angularUiAnimation.flip",["angularUiAnimation.flip.flipIn"]),angular.module("angularUiAnimation.util",[]).factory("util",function(){var i=this;return i.css=function(i,n,a){var t=i[0];return a&&(t.style[n]=a),t.style[n]},i.attr=function(i,n,a){var t=i[0];return a&&t.setAttribute(n,a),t.getAttribute(n)},i}),angular.module("angularUiAnimation.fly.flyIn",[]).directive("flyIn",["$timeout","util",function(i,n){return{restrict:"EA",scope:!1,link:function(a,t,l){var r=n.attr(t,"duration")||3e3,u=n.attr(t,"direction")||"bottom";n.css(t,"animationDuration",r/1e3+"s"),t.addClass("au-fly-in"),t.addClass(u),i(function(){t.removeClass("au-fly-in"),t.removeClass(u)},r)}}}]),angular.module("angularUiAnimation.fly",["angularUiAnimation.fly.flyIn"]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuZ3VsYXItdWktYW5pbWF0aW9uLmpzIiwiZmxpcC9mbGlwLWluLmpzIiwiZmxpcC9mbGlwLmpzIiwidXRpbC91dGlsLmpzIiwiZmx5L2ZseS1pbi5qcyIsImZseS9mbHkuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImRpcmVjdGl2ZSIsIiR0aW1lb3V0IiwidXRpbCIsInJlc3RyaWN0Iiwic2NvcGUiLCJsaW5rIiwiZWxlbWVudCIsImF0dHIiLCJkdXJhdGlvbiIsImRpcmVjdGlvbiIsIndoZW4iLCJzcGxpdCIsImNvbnNvbGUiLCJsb2ciLCJhbmltYXRpb24iLCJjc3MiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiaSIsImJpbmQiLCJmYWN0b3J5Iiwic2VsZiIsInRoaXMiLCJlbCIsInZhbHVlIiwic3R5bGUiLCJzZXRBdHRyaWJ1dGUiLCJnZXRBdHRyaWJ1dGUiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLHNCQUNBLHlCQUNBLDBCQUNBLDRCQ0hBRCxRQUNBQyxPQUFBLHFDQUNBQyxVQUFBLFVBQUEsV0FBQSxPQUFBLFNBQUFDLEVBQUFDLEdBQ0EsT0FDQUMsU0FBQSxLQUNBQyxPQUFBLEVBQ0FDLEtBQUEsU0FBQUQsRUFBQUUsRUFBQUMsR0FDQSxHQUFBQyxHQUFBTixFQUFBSyxLQUFBRCxFQUFBLGFBQUEsSUFDQUcsRUFBQVAsRUFBQUssS0FBQUQsRUFBQSxjQUFBLFdBQ0FJLEVBQUFSLEVBQUFLLEtBQUFELEVBQUEsU0FBQSxNQUNBSSxHQUFBQSxFQUFBQyxNQUFBLEtBQ0FDLFFBQUFDLElBQUFILEVBQ0EsSUFBQUksR0FBQSxXQUNBWixFQUFBYSxJQUFBVCxFQUFBLG9CQUFBRSxFQUFBLElBQUEsS0FDQUYsRUFBQVUsU0FBQSxjQUNBVixFQUFBVSxTQUFBUCxHQUNBUixFQUFBLFdBQ0FLLEVBQUFXLFlBQUEsY0FDQVgsRUFBQVcsWUFBQVIsSUFDQUQsR0FFQSxLQUFBLEdBQUFVLEtBQUFSLEdBQ0EsU0FBQUEsRUFBQVEsR0FDQUosSUFFQVIsRUFBQWEsS0FBQVQsRUFBQVEsR0FBQUosUUN6QkFoQixRQUNBQyxPQUFBLDJCQUFBLG1DQ0RBRCxRQUFBQyxPQUFBLDhCQUNBcUIsUUFBQSxPQUFBLFdBQ0EsR0FBQUMsR0FBQUMsSUFlQSxPQWRBRCxHQUFBTixJQUFBLFNBQUFRLEVBQUFoQixFQUFBaUIsR0FDQSxHQUFBbEIsR0FBQWlCLEVBQUEsRUFJQSxPQUhBQyxLQUNBbEIsRUFBQW1CLE1BQUFsQixHQUFBaUIsR0FFQWxCLEVBQUFtQixNQUFBbEIsSUFFQWMsRUFBQWQsS0FBQSxTQUFBZ0IsRUFBQWhCLEVBQUFpQixHQUNBLEdBQUFsQixHQUFBaUIsRUFBQSxFQUlBLE9BSEFDLElBQ0FsQixFQUFBb0IsYUFBQW5CLEVBQUFpQixHQUVBbEIsRUFBQXFCLGFBQUFwQixJQUVBYyxJQ2pCQXZCLFFBQ0FDLE9BQUEsbUNBQ0FDLFVBQUEsU0FBQSxXQUFBLE9BQUEsU0FBQUMsRUFBQUMsR0FDQSxPQUNBQyxTQUFBLEtBQ0FDLE9BQUEsRUFDQUMsS0FBQSxTQUFBRCxFQUFBRSxFQUFBQyxHQUNBLEdBQUFDLEdBQUFOLEVBQUFLLEtBQUFELEVBQUEsYUFBQSxJQUNBRyxFQUFBUCxFQUFBSyxLQUFBRCxFQUFBLGNBQUEsUUFDQUosR0FBQWEsSUFBQVQsRUFBQSxvQkFBQUUsRUFBQSxJQUFBLEtBQ0FGLEVBQUFVLFNBQUEsYUFDQVYsRUFBQVUsU0FBQVAsR0FDQVIsRUFBQSxXQUNBSyxFQUFBVyxZQUFBLGFBQ0FYLEVBQUFXLFlBQUFSLElBQ0FELFFDZkFWLFFBQ0FDLE9BQUEsMEJBQUEiLCJmaWxlIjoiYW5ndWxhci11aS1hbmltYXRpb24ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoXCJhbmd1bGFyVWlBbmltYXRpb25cIixcclxuICAgICAgWydhbmd1bGFyVWlBbmltYXRpb24uZmx5JyxcclxuICAgICAgJ2FuZ3VsYXJVaUFuaW1hdGlvbi51dGlsJyxcclxuICAgICAgJ2FuZ3VsYXJVaUFuaW1hdGlvbi5mbGlwJ10pO1xyXG4iLCJhbmd1bGFyXHJcbiAgLm1vZHVsZShcImFuZ3VsYXJVaUFuaW1hdGlvbi5mbGlwLmZsaXBJblwiLCBbXSlcclxuICAuZGlyZWN0aXZlKFwiZmxpcEluXCIsIFsnJHRpbWVvdXQnLCAndXRpbCcsIGZ1bmN0aW9uKCR0aW1lb3V0LCB1dGlsKXtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgICByZXN0cmljdDogJ0VBJyxcclxuICAgICAgICAgIHNjb3BlOmZhbHNlLFxyXG4gICAgICAgICAgbGluazpmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cil7XHJcbiAgICAgICAgICAgIHZhciBkdXJhdGlvbiA9IHV0aWwuYXR0cihlbGVtZW50LCdkdXJhdGlvbicpfHwzMDA7XHJcbiAgICAgICAgICAgIHZhciBkaXJlY3Rpb24gPSAgdXRpbC5hdHRyKGVsZW1lbnQsJ2RpcmVjdGlvbicpfHwndmVydGljYWwnO1xyXG4gICAgICAgICAgICB2YXIgd2hlbiA9IHV0aWwuYXR0cihlbGVtZW50LCAnd2hlbicpfHwnaW5pdCc7XHJcbiAgICAgICAgICAgIHdoZW4gPSB3aGVuLnNwbGl0KFwiLFwiKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2cod2hlbik7XHJcbiAgICAgICAgICAgIHZhciBhbmltYXRpb24gPSBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgdXRpbC5jc3MoZWxlbWVudCwgJ2FuaW1hdGlvbkR1cmF0aW9uJywgZHVyYXRpb24vMTAwMCsncycpO1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5hZGRDbGFzcygnYXUtZmxpcC1pbicpO1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5hZGRDbGFzcyhkaXJlY3Rpb24pO1xyXG4gICAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICBlbGVtZW50LnJlbW92ZUNsYXNzKCdhdS1mbGlwLWluJyk7XHJcbiAgICAgICAgICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQ2xhc3MoZGlyZWN0aW9uKTtcclxuICAgICAgICAgICAgICB9LCBkdXJhdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZm9yKHZhciBpIGluIHdoZW4pe1xyXG4gICAgICAgICAgICAgIGlmKHdoZW5baV0gPT09ICdpbml0Jyl7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRpb24oKTtcclxuICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQuYmluZCh3aGVuW2ldLCBhbmltYXRpb24pO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gIH1dKTtcclxuIiwiYW5ndWxhclxyXG4gIC5tb2R1bGUoXCJhbmd1bGFyVWlBbmltYXRpb24uZmxpcFwiLCBbJ2FuZ3VsYXJVaUFuaW1hdGlvbi5mbGlwLmZsaXBJbiddKTtcclxuIiwiYW5ndWxhci5tb2R1bGUoXCJhbmd1bGFyVWlBbmltYXRpb24udXRpbFwiLFtdKVxyXG4gIC5mYWN0b3J5KCd1dGlsJyxmdW5jdGlvbigpe1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5jc3MgPSBmdW5jdGlvbiAoZWwsIGF0dHIsIHZhbHVlKXtcclxuICAgICAgdmFyIGVsZW1lbnQgPSBlbFswXTtcclxuICAgICAgaWYodmFsdWUpe1xyXG4gICAgICAgIGVsZW1lbnQuc3R5bGVbYXR0cl0gPSB2YWx1ZTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZWxlbWVudC5zdHlsZVthdHRyXTtcclxuICAgIH07XHJcbiAgICBzZWxmLmF0dHIgPSBmdW5jdGlvbihlbCwgYXR0ciwgdmFsdWUpe1xyXG4gICAgICB2YXIgZWxlbWVudCA9IGVsWzBdO1xyXG4gICAgICBpZih2YWx1ZSl7XHJcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoYXR0ciwgdmFsdWUpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBlbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyKTtcclxuICAgIH1cclxuICAgIHJldHVybiBzZWxmO1xyXG4gIH0pO1xyXG4iLCJhbmd1bGFyXHJcbiAgLm1vZHVsZShcImFuZ3VsYXJVaUFuaW1hdGlvbi5mbHkuZmx5SW5cIiwgW10pXHJcbiAgLmRpcmVjdGl2ZShcImZseUluXCIsIFsnJHRpbWVvdXQnLCAndXRpbCcsIGZ1bmN0aW9uKCR0aW1lb3V0LCB1dGlsKXtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgICByZXN0cmljdDogJ0VBJyxcclxuICAgICAgICAgIHNjb3BlOmZhbHNlLFxyXG4gICAgICAgICAgbGluazpmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cil7XHJcbiAgICAgICAgICAgIHZhciBkdXJhdGlvbiA9IHV0aWwuYXR0cihlbGVtZW50LCAnZHVyYXRpb24nKXx8MzAwMDtcclxuICAgICAgICAgICAgdmFyIGRpcmVjdGlvbiA9IHV0aWwuYXR0cihlbGVtZW50LCAnZGlyZWN0aW9uJyl8fCdib3R0b20nO1xyXG4gICAgICAgICAgICB1dGlsLmNzcyhlbGVtZW50LCAnYW5pbWF0aW9uRHVyYXRpb24nLCBkdXJhdGlvbi8xMDAwKydzJyk7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuYWRkQ2xhc3MoJ2F1LWZseS1pbicpO1xyXG4gICAgICAgICAgICBlbGVtZW50LmFkZENsYXNzKGRpcmVjdGlvbik7XHJcbiAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVDbGFzcygnYXUtZmx5LWluJyk7XHJcbiAgICAgICAgICAgICAgICBlbGVtZW50LnJlbW92ZUNsYXNzKGRpcmVjdGlvbik7XHJcbiAgICAgICAgICAgICAgfSwgZHVyYXRpb24pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gIH1dKTtcclxuIiwiYW5ndWxhclxyXG4gIC5tb2R1bGUoXCJhbmd1bGFyVWlBbmltYXRpb24uZmx5XCIsIFsnYW5ndWxhclVpQW5pbWF0aW9uLmZseS5mbHlJbiddKTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
